version: "3.4"

services:
  s_rabbitmq:
    container_name: c_rabbitmq
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
      interval: 2s
      timeout: 1s
      retries: 3

  s_database:
    container_name: c_database
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: Password123.
      POSTGRES_USER: postgres
      POSTGRES_DB: crawler
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 1s
      retries: 3

  s_webapi:
    container_name: c_webapi
    image: crawler.webapi
    build:
      context: .
      dockerfile: src/Crawler.WebAPI/Dockerfile
    ports:
      - "8080:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      s_database:
        condition: service_healthy
      s_rabbitmq:
        condition: service_healthy
  
  s_pagedownloader:
    container_name: c_pagedownloader
    image: crawler.pagedownloader
    build:
      context: .
      dockerfile: src/Crawler.PageDownloader/Dockerfile
    environment:
      ENVIRONMENT: Production
    depends_on:
      s_database:
        condition: service_healthy
      s_rabbitmq:
        condition: service_healthy
  
  s_linkextractor:
    container_name: c_linkextractor
    image: crawler.linkextractor
    build:
      context: .
      dockerfile: src/Crawler.LinkExtractor/Dockerfile
    environment:
      ENVIRONMENT: Production
    depends_on:
      s_database:
        condition: service_healthy
      s_rabbitmq:
        condition: service_healthy